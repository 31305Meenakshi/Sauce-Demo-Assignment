{"C:\\Users\\meenakshi.sahu\\Downloads\\typeScript\\playwright.config.ts":{"path":"C:\\Users\\meenakshi.sahu\\Downloads\\typeScript\\playwright.config.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":39}},"3":{"start":{"line":16,"column":15},"end":{"line":85,"column":2}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":33}},"type":"cond-expr","locations":[{"start":{"line":23,"column":28},"end":{"line":23,"column":29}},{"start":{"line":23,"column":32},"end":{"line":23,"column":33}}],"line":23},"1":{"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":41}},"type":"cond-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":29}},{"start":{"line":25,"column":32},"end":{"line":25,"column":41}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{"0":[0,1],"1":[0,1]},"inputSourceMap":{"version":3,"names":["_test","require","_default","exports","default","defineConfig","testDir","fullyParallel","forbidOnly","process","env","CI","retries","workers","undefined","reporter","timeout","use","launchOptions","slowMo","trace","projects","name","devices"],"sources":["playwright.config.ts"],"sourcesContent":["import { defineConfig, devices } from \"@playwright/test\";\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  testDir: \"./tests\",\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: \"html\",\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  timeout: 60000,\n\n  use: {\n    launchOptions: {\n      slowMo: 1000,\n    },\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    // baseURL: 'http://127.0.0.1:3000',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: \"on-first-retry\",\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: \"chromium\",\n      use: { ...devices[\"Desktop Chrome\"] },\n    },\n\n    // {\n    //   name: \"firefox\",\n    //   use: { ...devices[\"Desktop Firefox\"] },\n    // },\n\n    // {\n    //   name: \"webkit\",\n    //   use: { ...devices[\"Desktop Safari\"] },\n    // },\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: { ...devices['Pixel 5'] },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: { ...devices['iPhone 12'] },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: { ...devices['Desktop Edge'], channel: 'msedge' },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' },\n    // },\n  ],\n\n  /* Run your local dev server before starting the tests */\n  // webServer: {\n  //   command: 'npm run start',\n  //   url: 'http://127.0.0.1:3000',\n  //   reuseExistingServer: !process.env.CI,\n  // },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe,IAAAC,kBAAY,EAAC;EAC1BC,OAAO,EAAE,SAAS;EAClB;EACAC,aAAa,EAAE,IAAI;EACnB;EACAC,UAAU,EAAE,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,EAAE;EAC5B;EACAC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/B;EACAE,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAGG,SAAS;EACvC;EACAC,QAAQ,EAAE,MAAM;EAChB;EACAC,OAAO,EAAE,KAAK;EAEdC,GAAG,EAAE;IACHC,aAAa,EAAE;MACbC,MAAM,EAAE;IACV,CAAC;IACD;IACA;;IAEA;IACAC,KAAK,EAAE;EACT,CAAC;EAED;EACAC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UAAU;IAChBL,GAAG,EAAE;MAAE,GAAGM,aAAO,CAAC,gBAAgB;IAAE;EACtC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;;EAGF;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02f08ab4f0aaa7079ed7fde50cb35e577565f0e4","contentHash":"9e8c77e8efbda28534be50392f4107844ba7a8eb1d7619646e45b63206cd0172"},"C:\\Users\\meenakshi.sahu\\Downloads\\typeScript\\logger.ts":{"path":"C:\\Users\\meenakshi.sahu\\Downloads\\typeScript\\logger.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"2":{"start":{"line":7,"column":15},"end":{"line":7,"column":57}},"3":{"start":{"line":8,"column":39},"end":{"line":8,"column":93}},"4":{"start":{"line":9,"column":15},"end":{"line":15,"column":1}},"5":{"start":{"line":16,"column":15},"end":{"line":20,"column":1}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"7":{"start":{"line":22,"column":15},"end":{"line":26,"column":91}},"8":{"start":{"line":26,"column":39},"end":{"line":26,"column":89}},"9":{"start":{"line":27,"column":19},"end":{"line":32,"column":3}},"10":{"start":{"line":33,"column":15},"end":{"line":37,"column":2}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":31}},"loc":{"start":{"line":8,"column":37},"end":{"line":8,"column":95}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":31},"end":{"line":26,"column":32}},"loc":{"start":{"line":26,"column":39},"end":{"line":26,"column":89}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":46},"end":{"line":8,"column":92}},"type":"cond-expr","locations":[{"start":{"line":8,"column":70},"end":{"line":8,"column":73}},{"start":{"line":8,"column":76},"end":{"line":8,"column":92}}],"line":8},"1":{"loc":{"start":{"line":8,"column":46},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":46},"end":{"line":8,"column":49}},{"start":{"line":8,"column":53},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1},"f":{"0":1,"1":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["_winston","_interopRequireDefault","require","obj","__esModule","default","levels","error","warn","info","http","debug","colors","winston","addColors","format","combine","timestamp","printf","level","message","transports","Console","File","filename","Logger","exports","createLogger"],"sources":["logger.ts"],"sourcesContent":["import winston from \"winston\";\r\n\r\nconst levels = {\r\n  error: 0,\r\n  warn: 1,\r\n  info: 2,\r\n  http: 3,\r\n  debug: 4,\r\n};\r\n\r\nconst colors = {\r\n  error: \"red\",\r\n  warn: \"yellow\",\r\n  info: \"green\",\r\n};\r\n\r\nwinston.addColors(colors);\r\n\r\nconst format = winston.format.combine(\r\n  winston.format.timestamp({ format: \"YYYY-MM-DD HH:mm:ss:SSS\" }),\r\n  // winston.format.colorize({ all: true }),\r\n  winston.format.printf(\r\n    (info) => `${info.timestamp} ${info.level}: ${info.message}`\r\n  )\r\n);\r\nconst transports = [\r\n  new winston.transports.Console(),\r\n  new winston.transports.File({\r\n    filename: \"logs/error.log\",\r\n    level: \"error\",\r\n  }),\r\n  new winston.transports.File({ filename: \"logs/all.log \" }),\r\n];\r\nexport const Logger = winston.createLogger({\r\n  levels,\r\n  format,\r\n  transports,\r\n});\r\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE9B,MAAMG,MAAM,GAAG;EACbC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,MAAM,GAAG;EACbL,KAAK,EAAE,KAAK;EACZC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;AACR,CAAC;AAEDI,gBAAO,CAACC,SAAS,CAACF,MAAM,CAAC;AAEzB,MAAMG,MAAM,GAAGF,gBAAO,CAACE,MAAM,CAACC,OAAO,CACnCH,gBAAO,CAACE,MAAM,CAACE,SAAS,CAAC;EAAEF,MAAM,EAAE;AAA0B,CAAC,CAAC;AAC/D;AACAF,gBAAO,CAACE,MAAM,CAACG,MAAM,CAClBT,IAAI,IAAM,GAAEA,IAAI,CAACQ,SAAU,IAAGR,IAAI,CAACU,KAAM,KAAIV,IAAI,CAACW,OAAQ,EAC7D,CACF,CAAC;AACD,MAAMC,UAAU,GAAG,CACjB,IAAIR,gBAAO,CAACQ,UAAU,CAACC,OAAO,CAAC,CAAC,EAChC,IAAIT,gBAAO,CAACQ,UAAU,CAACE,IAAI,CAAC;EAC1BC,QAAQ,EAAE,gBAAgB;EAC1BL,KAAK,EAAE;AACT,CAAC,CAAC,EACF,IAAIN,gBAAO,CAACQ,UAAU,CAACE,IAAI,CAAC;EAAEC,QAAQ,EAAE;AAAgB,CAAC,CAAC,CAC3D;AACM,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAGZ,gBAAO,CAACc,YAAY,CAAC;EACzCrB,MAAM;EACNS,MAAM;EACNM;AACF,CAAC,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"16596f80c55d031e8f1eaf1ff6d2e32354153b61","contentHash":"c973cbda164e02e661b62450618a68c0d004e5db0ad59ba03630c5437bcbc5c9"}}